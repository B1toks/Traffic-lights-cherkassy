import React, {useState} from "react";
import Modal from "react-modal";
import photo from "../assets/img/photo.svg";
import {useDispatch, useSelector} from "react-redux";
import {getLights, reset} from "../redux/slices/lightSlice";

Modal.setAppElement('#root');

const TrafficLightModal = ({isOpen, closeModal, trafficLight, approveLight}) => {
	const dispatch = useDispatch();

	const castVote = async (positive) => {
		await fetch(`${process.env.REACT_APP_SERVER_URL}/lights/vote/${trafficLight.id}`, {
			method: 'POST',
			headers: {"Content-Type": "application/json"},
			body: JSON.stringify({vote: positive}),
		})
			.then(() => {
				dispatch(getLights());
			})
	};

	return (
		<Modal
			isOpen={isOpen}
			onRequestClose={closeModal}
			contentLabel="–°–≤—ñ—Ç–ª–æ—Ñ–æ—Ä"
			style={{
				overlay: {backgroundColor: 'rgba(0, 0, 0, 0.5)', zIndex: 1000},
				content: {
					background: 'white',
					borderRadius: '10px',
					padding: '20px',
					width: '320px',
					margin: 'auto',
					maxWidth: '90%',
					boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)'
				}
			}}
		>
			{/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è */}
			<button
				onClick={closeModal}
				style={{
					position: 'absolute',
					top: '10px',
					right: '10px',
					background: 'transparent',
					border: 'none',
					fontSize: '20px',
					color: '#333',
					cursor: 'pointer',
				}}
			>
				&times;
			</button>

			<div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>
				<h2>–°–≤—ñ—Ç–ª–æ—Ñ–æ—Ä {trafficLight?.id}</h2>
				{/* –°—Ç–∞—Ç—É—Å —Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä–∞ */}
				<span style={{
					backgroundColor: trafficLight?.status ? "green" : "red",
					color: "white",
					borderRadius: "5px",
					padding: "5px 10px",
					fontWeight: "bold"
				}}>
          {trafficLight?.status ? "–°–≤—ñ—Ç–∏—Ç—å—Å—è" : "–ù–µ —Å–≤—ñ—Ç–∏—Ç—å—Å—è"}
        </span>
			</div>

			{/* –í—É–ª–∏—Ü—è */}
			<p><strong>–í—É–ª–∏—Ü—è: </strong>{trafficLight?.street || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}</p>

			{/* –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è */}
			<p><strong>–û–Ω–æ–≤–ª–µ–Ω–æ:</strong> {Date(trafficLight?.updated) || "–ù–µ–≤—ñ–¥–æ–º–æ(–õ–∞—Å—Ç —Ç–∞–π–º)"}</p>

			{/* –§–æ—Ç–æ —Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä–∞ */}
			<div style={{marginBottom: '10px'}}>
				<img
					src={photo}
					alt="–§–æ—Ç–æ —Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä–∞"
					style={{
						width: '100%',
						height: 'auto',
						display: 'block',
					}}
				/>
			</div>

			{/* –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–ª–æ—Å—ñ–≤ */}
			<p><strong>–ì–æ–ª–æ—Å—ñ–≤: </strong>{trafficLight?.votes || "–©–µ –Ω–µ –æ—Ü—ñ–Ω–µ–Ω–æ"}</p>

			{/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É */}
			<p>–û—Ü—ñ–Ω—ñ—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ñ—Å—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó</p>
			<button
				onClick={() => castVote(true)}
				style={{
					backgroundColor: "transparent",
					color: "white",
					padding: "10px 20px",
					border: "1px green solid",
					borderRadius: "5px",
					cursor: "pointer",
					width: "100%",
				}}
			>
				üëç
			</button>
			<button
				onClick={() => castVote(false)}
				style={{
					backgroundColor: "transparent",
					color: "white",
					padding: "10px 20px",
					border: "1px red solid",
					borderRadius: "5px",
					cursor: "pointer",
					width: "100%",
					marginTop: '10px',
				}}
			>
				üëé
			</button>
		</Modal>
	);
};

export default TrafficLightModal;
